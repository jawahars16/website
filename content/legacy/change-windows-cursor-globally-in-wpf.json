{"meta":{"featuredImage":"https://s0.wp.com/i/blank.jpg","published_date":"2012-04-28T00:00:00.000Z","postId":"change-windows-cursor-globally-in-wpf","title":"Change Windows cursor globally in WPF","excerpt":"\t\t\tIt is very obvious that we can change the cursor in WPF using FrameworkElement.Cursor. But the trick is, it only works within your application and not outside your application Main Window. In case if you want to change the cursor for the entire OS, we don’t have any direct way in WPF. But most of","tags":[]},"content":"\n\t\t\t\t<div dir=\"ltr\">It is very obvious that we can change the cursor in WPF using FrameworkElement.Cursor. But the trick is, it only works within your application and not outside your application Main Window. In case if you want to change the cursor for the entire OS, we&#xA0;don&#x2019;t&#xA0;have any direct way in WPF. But most of the developers worried why we need to change the entire Windows cursor. But take an example, if we are developing an eye dropper control in WPF (used to pick color). Not like the one in Illustrator or Photoshop (cannot pick color outside the application), but the one we have in Expression Blend or Visual Studio designer (can pick color even outside the application also).<p></p>\n<p>In that cases, the cursor should be changed, because arrow cursor will not be a comfortable one to pick color. Normally cursor values resides in registry.</p>\n<p><b>Registry Key :&#xA0;</b>HKEY_CURRENT_USER\\Control Panel\\Cursors</p>\n<p>Changing the values here will change the cursor, but your system needs a reboot to take effect (I can understand, none of the developers will accept this). To avoid that and make your app. taking immediate effect, you need to invoke a pinvoke call.</p>\n<p>The following method will refresh the cursor &#xA0;values,</p>\n<p></p>\n<pre><code>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[DllImport(&quot;user32.dll&quot;,&#xA0;EntryPoint&#xA0;=&#xA0;&quot;SystemParametersInfo&quot;)]<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;public&#xA0;static&#xA0;extern&#xA0;bool&#xA0;SystemParametersInfo(int&#xA0;uAction,&#xA0;int&#xA0;uParam,&#xA0;string&#xA0;lpvParam,&#xA0;int&#xA0;fuWinIni);&#xA0;<br></code></pre>\n<p>Iterate through registry values and change the cursor path.</p>\n<p></p>\n<pre><code>        private&#xA0;void&#xA0;ChangeCursor()<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;RegistryKey&#xA0;pRegKey&#xA0;=&#xA0;Registry.CurrentUser;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;pRegKey&#xA0;=&#xA0;pRegKey.OpenSubKey(@&quot;Control&#xA0;Panel\\Cursors&quot;);<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;paths.Clear();<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;foreach&#xA0;(var&#xA0;key&#xA0;in&#xA0;pRegKey.GetValueNames())<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Object&#xA0;_key&#xA0;=&#xA0;pRegKey.GetValue(key);</code></pre>\n<pre><code>                //Take&#xA0;a&#xA0;backup.<br><br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;paths.Add(key,&#xA0;_key.ToString()); &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Object&#xA0;val&#xA0;=&#xA0;Registry.GetValue(@&quot;HKEY_CURRENT_USER\\Control&#xA0;Panel\\Cursors&quot;,&#xA0;key,&#xA0;null); &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Registry.SetValue(@&quot;HKEY_CURRENT_USER\\Control&#xA0;Panel\\Cursors&quot;,&#xA0;key,&#xA0;&quot;foo.cur&quot;); &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;} &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;SystemParametersInfo(InteropHelper.SPI_SETCURSORS,&#xA0;0,&#xA0;null,&#xA0;InteropHelper.SPIF_UPDATEINIFILE&#xA0;|&#xA0;InteropHelper.SPIF_SENDCHANGE);&#xA0;&#xA0; &#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br>Make sure you store the registry values before change it, so that you can restore the cursor to the default values.<br>&#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0;&#xA0;private&#xA0;void&#xA0;ResetCursorToDefault()<br>&#xA0; &#xA0; &#xA0; &#xA0; {<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;RegistryKey&#xA0;pRegKey&#xA0;=&#xA0;Registry.CurrentUser;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;pRegKey&#xA0;=&#xA0;pRegKey.OpenSubKey(@&quot;Control&#xA0;Panel\\Cursors&quot;);<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;foreach&#xA0;(string&#xA0;key&#xA0;in&#xA0;paths.Keys)<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;string&#xA0;path&#xA0;=&#xA0;paths[key];<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Registry.SetValue(@&quot;HKEY_CURRENT_USER\\Control&#xA0;Panel\\Cursors&quot;,&#xA0;key,&#xA0;path);<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;InteropHelper.SystemParametersInfo(InteropHelper.SPI_SETCURSORS,&#xA0;0,&#xA0;null,&#xA0;InteropHelper.SPIF_UPDATEINIFILE&#xA0;|&#xA0;InteropHelper.SPIF_SENDCHANGE);<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br><br><br>The InteropHelper class has been posted in this article.<br></code></pre></div>\n\t\t\t"}