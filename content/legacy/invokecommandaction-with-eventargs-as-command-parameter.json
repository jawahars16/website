{"meta":{"tags":[],"featuredImage":"https://s0.wp.com/i/blank.jpg","published_date":"2014-01-18T00:00:00.000Z","postId":"invokecommandaction-with-eventargs-as-command-parameter","title":"InvokeCommandAction with EventArgs as CommandÂ Parameter","excerpt":"\t\t\tExpression Blend team provides the ability to wire up some events to viewmodel through commands like SelectionChanged of a ListBox, etc using System.Windows.Interactivity.dll. You can bind a Command to any event with WPF controls. There is also a way to bind command parameter also, so that view s"},"content":"\n\t\t\t\t<p>Expression Blend team provides the ability to wire up some events to viewmodel through commands like SelectionChanged of a ListBox, etc using <strong>System.Windows.Interactivity.dll</strong>. You can bind a Command to any event with WPF controls. There is also a way to bind command parameter also, so that view state can passed to the viewmodel.</p>\n<p><span id=\"more-5\"></span></p>\n<pre><code>&lt;ListBox x:Name=&quot;list&quot;&gt;<br> &lt;i:Interaction.Triggers&gt;<br> &lt;i:EventTrigger EventName=&quot;SelectionChanged&quot;&gt;<br> &lt;i:InvokeCommandAction Command=&quot;{Binding SelectionChangedCommand}&quot;<br> CommandParameter=&quot;{Binding ElementName=list, Path=SelectedItem}&quot;/&gt;<br> &lt;/i:EventTrigger&gt;<br> &lt;/i:Interaction.Triggers&gt;<br> &lt;str:String&gt;Test Item 1&lt;/str:String&gt;<br> &lt;str:String&gt;Test Item 2&lt;/str:String&gt;<br> &lt;str:String&gt;Test Item 3&lt;/str:String&gt;<br> &lt;/ListBox&gt;<br><br><br></code></pre>\n<p><strong>Custom Command Action</strong></p>\n<p>But there are some scenarios where you need to pass the exact event args of the event to the ViewModel. For example, the Drop event, where user can drop a file from system&#x2019;s windows explorer to the application. The InvokeCommandAction provided by default does not have this option. If you leave the CommandParameter property as empty, then you will get a null value in viewmodel. You could see they ignore the event args completely, by reflecting the code.</p>\n<p>But still there is a way to achieve this. We can create our custom CommandAction inheriting from TriggerAction. I have provided the source code. This will pass the event args as the parameter if CommandParameter not specified and still works if it is specified like legacy one.</p>\n<p><a href=\"https://dl.dropboxusercontent.com/u/71941230/SourceCode/SourceCode/Sample.zip\" target=\"_blank\">Download Source here</a></p>\n<p>Happy Commanding. &#x1F642;</p>\n\t\t\t"}