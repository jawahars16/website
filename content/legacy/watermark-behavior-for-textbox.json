{"meta":{"featuredImage":"https://wpfplayground.files.wordpress.com/2014/06/watermark.png","published_date":"2014-06-30T00:00:00.000Z","postId":"watermark-behavior-for-textbox","title":"Watermark Behavior forÂ Textbox","excerpt":"\t\t\tIt is obvious that there is no direct way to set Watermark in WPF textboxes. Some third party controls and codeplex gave extended textboxes which supports watermark. Watermark can also be achieved through overriding the default style of a textbox. A textblock/Label needs to be inserted in default","tags":["behavior","textbox","watermark","wpf"]},"content":"\n\t\t\t\t<p>It is obvious that there is no direct way to set Watermark in WPF textboxes. Some third party controls and codeplex gave extended textboxes which supports watermark. Watermark can also be achieved through overriding the default style of a textbox. A textblock/Label needs to be inserted in default control template to display the Watermark. But it will be a static one. To make it dynamic, developers used <strong>Tag</strong> property to store Watermark data.</p>\n<p>But here is a behavior, which creates an adorner on top of Textbox. The adorner is responsible to draw the Watermark text. Font&#xA0;related dependency properties can be added to the behavior. So this is highly dynamic.</p>\n<p><span id=\"more-351\"></span></p>\n<pre><code><br>        public class WaterMarkAdorner : Adorner<br>        {<br>            private string text;<br>            private double fontSize;<br>            private string fontFamily;<br>            private Brush foreground;<br><br>            public WaterMarkAdorner(UIElement element, string text, double fontsize, string font, Brush foreground)<br>                : base(element)<br>            {<br>                this.IsHitTestVisible = false;<br>                this.Opacity = 0.6;<br>                this.text = text;<br>                this.fontSize = fontsize;<br>                this.fontFamily = font;<br>                this.foreground = foreground;<br>            }<br><br>            protected override void OnRender(System.Windows.Media.DrawingContext drawingContext)<br>            {<br>                base.OnRender(drawingContext);<br>                var text = new FormattedText(<br>                        this.text,<br>                        System.Globalization.CultureInfo.CurrentCulture,<br>                        System.Windows.FlowDirection.LeftToRight,<br>                        new System.Windows.Media.Typeface(fontFamily),<br>                        fontSize,<br>                        foreground);<br><br>                drawingContext.DrawText(text, new Point(3, 3));<br>            }<br>        }<br></code></pre>\n<p>The behavior utilizing this adorner to decorate the textbox. Right now the behavior supports only TextBox. But still the idea can be extended to PasswordBox, ComboBox, etc.</p>\n<pre><code>        private void OnLoaded(object sender, RoutedEventArgs e)<br>        {<br>            if (!this.AssociatedObject.IsFocused)<br>            {<br>                if (String.IsNullOrEmpty(this.AssociatedObject.Text))<br>                {<br>                    var layer = AdornerLayer.GetAdornerLayer(this.AssociatedObject);<br>                    layer.Add(adorner);<br>                }<br>            }<br>        }<br></code></pre>\n<p>The XAML code looks as follows,</p>\n<pre><code>            &lt;TextBox Width=&quot;200&quot;<br>                     Margin=&quot;5&quot;<br>                     Height=&quot;20&quot;&gt;<br>                &lt;i:Interaction.Behaviors&gt;<br>                    &lt;behavior:WatermarkBehavior Text=&quot;Maximum 15 characters&quot; /&gt;<br>                &lt;/i:Interaction.Behaviors&gt;<br>            &lt;/TextBox&gt;<br></code></pre>\n<p><a href=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png\"><img data-attachment-id=\"370\" data-permalink=\"https://wpfplayground.wordpress.com/2014/06/30/watermark-behavior-for-textbox/watermark/\" data-orig-file=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png\" data-orig-size=\"266,169\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"watermark\" data-image-description data-medium-file=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png?w=266\" data-large-file=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png?w=266\" src=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png?w=736\" alt=\"watermark\" srcset=\"https://wpfplayground.files.wordpress.com/2014/06/watermark.png 266w, https://wpfplayground.files.wordpress.com/2014/06/watermark.png?w=150 150w\" sizes=\"(max-width: 266px) 100vw, 266px\"></a></p>\n<p><a href=\"https://dl.dropboxusercontent.com/u/71941230/Freelancing/WatermarkBehaviorDemo.zip\">Download Demo</a></p>\n\t\t\t"}