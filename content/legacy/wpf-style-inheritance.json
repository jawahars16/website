{"meta":{"published_date":"2014-03-05T00:00:00.000Z","postId":"wpf-style-inheritance","title":"WPF Style Inheritance","excerpt":"\t\t\tA style in WPF can be inherited. Usually, in real world scenarios most of the theme related styles will be merged in App.xaml. In such cases, if style needs to be defined again in scope of a view. That particular style will override the style defined in App. For example, the following style for L","tags":["based on","inheritance","style","wpf","xaml"],"featuredImage":"https://wpfplayground.files.wordpress.com/2014/03/demo3.png"},"content":"\n\t\t\t\t<p>A style in WPF can be inherited. Usually, in real world scenarios most of the theme related styles will be merged in App.xaml. In such cases, if style needs to be defined again in scope of a view. That particular style will override the style defined in App. For example, the following style for ListBoxItem is defined in App.xaml.</p>\n<pre><code><br>&lt;Style TargetType=&quot;ListBoxItem&quot;&gt;<br>&lt;Setter Property=&quot;Background&quot; Value=&quot;Orange&quot; /&gt;<br>&lt;Setter Property=&quot;Foreground&quot; Value=&quot;White&quot; /&gt;<br>&lt;Setter Property=&quot;Padding&quot; Value=&quot;10&quot; /&gt;<br>&lt;/Style&gt;<br><br></code></pre>\n<p><span id=\"more-213\"></span></p>\n<p>The above style clearly stick to theming. Since it is an implicit styling, the styling will apply to ListBox items defined below,</p>\n<pre><code><br>&lt;ListBox ItemsSource=&quot;{Binding Movies}&quot;<br> DisplayMemberPath=&quot;Name&quot; /&gt;<br><br></code></pre>\n<p><a href=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png\"><img data-attachment-id=\"217\" data-permalink=\"https://wpfplayground.wordpress.com/2014/03/05/wpf-style-inheritance/demo1/\" data-orig-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png\" data-orig-size=\"555,381\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"demo1\" data-image-description data-medium-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png?w=300\" data-large-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png?w=555\" alt=\"demo1\" src=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png?w=736\" srcset=\"https://wpfplayground.files.wordpress.com/2014/03/demo1.png 555w, https://wpfplayground.files.wordpress.com/2014/03/demo1.png?w=150 150w, https://wpfplayground.files.wordpress.com/2014/03/demo1.png?w=300 300w\" sizes=\"(max-width: 555px) 100vw, 555px\"></a>The Listbox displaying the movies and showing the name of movie in each item. Now if we want to use ItemContainerStyle property of ListBoxItem to bind some other data, the framework will prefer shortest path to pick style and style that defined in App.xaml will be ignored.</p>\n<pre><code><br>&lt;ListBox ItemsSource=&quot;{Binding Movies}&quot;<br> DisplayMemberPath=&quot;Name&quot;&gt;<br> &lt;ListBox.ItemContainerStyle&gt;<br> &lt;Style TargetType=&quot;ListBoxItem&quot;&gt;<br> &lt;Setter Property=&quot;Opacity&quot;<br> Value=&quot;{Binding Rating}&quot; /&gt;<br> &lt;/Style&gt;<br> &lt;/ListBox.ItemContainerStyle&gt;<br> &lt;/ListBox&gt;<br><br></code></pre>\n<p><a href=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png\"><img data-attachment-id=\"223\" data-permalink=\"https://wpfplayground.wordpress.com/2014/03/05/wpf-style-inheritance/demo2/\" data-orig-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png\" data-orig-size=\"450,274\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"demo2\" data-image-description data-medium-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png?w=300\" data-large-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png?w=450\" alt=\"demo2\" src=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png?w=736\" srcset=\"https://wpfplayground.files.wordpress.com/2014/03/demo2.png 450w, https://wpfplayground.files.wordpress.com/2014/03/demo2.png?w=150 150w, https://wpfplayground.files.wordpress.com/2014/03/demo2.png?w=300 300w\" sizes=\"(max-width: 450px) 100vw, 450px\"></a></p>\n<p>Here I need both the styles I defined in App.xaml and the inline one. WPF provides a way to inherit the style by another one. <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.style.basedon(v=vs.110).aspx\">BasedOn </a>property helps us to achieve this.</p>\n<pre><code><br>&lt;ListBox ItemsSource=&quot;{Binding Movies}&quot;<br> DisplayMemberPath=&quot;Name&quot;&gt;<br> &lt;ListBox.ItemContainerStyle&gt;<br> &lt;Style TargetType=&quot;ListBoxItem&quot;<br> BasedOn=&quot;{StaticResource {x:Type ListBoxItem}}&quot;&gt;<br> &lt;Setter Property=&quot;Opacity&quot;<br> Value=&quot;{Binding Rating}&quot; /&gt;<br> &lt;/Style&gt;<br> &lt;/ListBox.ItemContainerStyle&gt;<br> &lt;/ListBox&gt;<br><br></code></pre>\n<p><a href=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png\"><img data-attachment-id=\"230\" data-permalink=\"https://wpfplayground.wordpress.com/2014/03/05/wpf-style-inheritance/demo3/\" data-orig-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png\" data-orig-size=\"555,381\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"demo3\" data-image-description data-medium-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png?w=300\" data-large-file=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png?w=555\" alt=\"demo3\" src=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png?w=736\" srcset=\"https://wpfplayground.files.wordpress.com/2014/03/demo3.png 555w, https://wpfplayground.files.wordpress.com/2014/03/demo3.png?w=150 150w, https://wpfplayground.files.wordpress.com/2014/03/demo3.png?w=300 300w\" sizes=\"(max-width: 555px) 100vw, 555px\"></a>Since the style in App.xaml is implicit style without key, we are specifying the type for BasedOn attribute. Otherwise we have to specify the key of base style.</p>\n\t\t\t"}