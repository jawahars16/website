{"meta":{"featuredImage":"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png","published_date":"2014-07-28T00:00:00.000Z","postId":"wpf-datepicker-blackoutdates-data-binding","title":"WPF DatePicker – BlackOutDates Data Binding","excerpt":"\t\t\tA problem with DatePicker is that BlackoutDates collection cannot be initalized without a Calendar instance. So in MVVM environment, it is bit hard to bind BlackoutDates dynamically. But attached properties are a handy way to handle these type of situations. An attached property of type List<Date","tags":["binding","BlackoutDates","datepicker","wpf","xaml"]},"content":"\n\t\t\t\t<p>A problem with <strong>DatePicker</strong> is that BlackoutDates collection cannot be initalized without a Calendar instance. So in MVVM environment, it is bit hard to bind BlackoutDates dynamically. But attached properties are a handy way to handle these type of situations. An attached property of type <em><strong>List&lt;DateTime&gt;</strong></em> can be used to achieve this. The dates will be added to the collection in the callback event of attached property manually.</p>\n<p><span id=\"more-419\"></span></p>\n<pre><code>    public class BlackOutDatesAdapter<br>    {<br>        public static List&lt;DateTime&gt; GetBlackOutDates(DependencyObject obj)<br>        {<br>            return (List&lt;DateTime&gt;)obj.GetValue(BlackOutDatesProperty);<br>        }<br><br>        public static void SetBlackOutDates(DependencyObject obj, List&lt;DateTime&gt; value)<br>        {<br>            obj.SetValue(BlackOutDatesProperty, value);<br>        }<br><br>        // Using a DependencyProperty as the backing store for BlackOutDates.  This enables animation, styling, binding, etc...<br>        public static readonly DependencyProperty BlackOutDatesProperty =<br>            DependencyProperty.RegisterAttached(&quot;BlackOutDates&quot;, typeof(List&lt;DateTime&gt;), typeof(BlackOutDatesAdapter), new PropertyMetadata(null, OnBlackOutDatesChanged));<br><br>        private static void OnBlackOutDatesChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e)<br>        {<br>            var control = sender as DatePicker;<br>            var list = (List&lt;DateTime&gt;)e.NewValue;<br>            foreach(var date in list)<br>            {<br>                control.BlackoutDates.Add(new CalendarDateRange(date));<br>            }<br>        }<br>    }<br></code></pre>\n<p>And this can be bound in XAML as below,</p>\n<pre><code>        &lt;DatePicker VerticalAlignment=&quot;Center&quot;<br>                    Width=&quot;200&quot;<br>                    local:BlackOutDatesAdapter.BlackOutDates=&quot;{Binding BlackOutDates}&quot;<br>                    DisplayDate=&quot;{Binding DisplayDate}&quot;/&gt;<br></code></pre>\n<p>In sample application the black out dates are populated based on the display date, so that user can see different blackout dates for different months. The Display Date property is bound to XAML.</p>\n<pre><code>        private void OnPropertyChanged(object sender, PropertyChangedEventArgs e)<br>        {<br>            if (e.PropertyName == &quot;DisplayDate&quot;)<br>            {<br>                BlackOutDates = new List&lt;DateTime&gt; { DisplayDate.Date.AddDays(randm.Next(1, 5)), DisplayDate.AddDays(randm.Next(1, 5)) };<br>            }<br>        }<br></code></pre>\n<p><a href=\"https://db.tt/X3vvCGiN\">Download Sample</a></p>\n<p><a href=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png\"><img data-attachment-id=\"421\" data-permalink=\"https://wpfplayground.wordpress.com/2014/07/28/wpf-datepicker-blackoutdates-data-binding/datepicker/\" data-orig-file=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png\" data-orig-size=\"332,313\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"datepicker\" data-image-description data-medium-file=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png?w=300\" data-large-file=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png?w=332\" src=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png?w=300&amp;h=282\" alt=\"datepicker\" width=\"300\" height=\"282\" srcset=\"https://wpfplayground.files.wordpress.com/2014/07/datepicker.png?w=300&amp;h=282 300w, https://wpfplayground.files.wordpress.com/2014/07/datepicker.png?w=150&amp;h=141 150w, https://wpfplayground.files.wordpress.com/2014/07/datepicker.png 332w\" sizes=\"(max-width: 300px) 100vw, 300px\"></a></p>\n\t\t\t"}